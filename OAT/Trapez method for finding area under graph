from scipy.integrate import odeint
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.legend import Legend
import pandas as pd

#----------------------

e1 = 0.01
b1 = 2
k1 = 125

params=[a1]


def fhn(x, t, params):
    # constants

    V1 = x[0]
    W1 = x[1]

    a1 = params[0]

    dV1dt = k1 * (V1 * (a1 - V1) * (V1 - 1) - W1)
    dW1dt = k1 * (e1 * (V1 - b1 * W1))
    return [dV1dt,dW1dt]


x0 = [0.1,0] # initial conditions
t = np.linspace(0,5,100000) # time
x = odeint(fhn,x0,t, args=(params,))

V1 = x[:,0]
W1 = x[:,1]

#----------------------


params = [-0.1] # alpha
x1 = odeint(fhn, x0, t,args=(params,))

params = [-0.09] #alpha
x2 = odeint(fhn, x0, t,args=(params,))

params = [-0.11] #alpha
x3 = odeint(fhn, x0, t,args=(params,))

params = [-0.6]  #alpha
x4 = odeint(fhn, x0, t, args=(params,))

params = [-0.01666666667]  #alpha
x5 = odeint(fhn, x0, t, args=(params,))

f, (ax1) = plt.subplots(figsize=(10,5))
line3, = ax1.plot(t, x5[:,0], color = "m", label = r"$\alpha$ = -0.01666666667")
line1, = ax1.plot(t, x2[:,0], color = "r", label = r"$\alpha$ = -0.09")
line0, = ax1.plot(t, x1[:,0], color = "b", label = r"$\alpha$ = -0.1")
line2, = ax1.plot(t, x3[:,0], color = "c", label = r"$\alpha$ = -0.11")
line3, = ax1.plot(t, x4[:,0], color = "y", label = r"$\alpha$ = -0.6")

#ax1.set_yticks([-0.5, -0.5, 0, 0.5, 1, 1])
ax1.grid(linestyle='--', linewidth=0.5)
ax1.grid(linestyle='--', linewidth=0.5)
leg = plt.legend(bbox_to_anchor=(0.85,0.5), loc="center left", borderaxespad=9.5, fontsize = 'medium')


#----------------------

List_ALPHA_Origin = x1[:,0] # list of the alpha = -0.1
List_a_minus09 = x2[:,0] # list of alpha = -0.09
List_a_minus11 = x3[:,0] # list of alpha = -0.11
List_a_minus6 = x4[:,0] # list of alpha = -0.6
List_a_minus01666666667 = x5[:,0] # list of alpha = -0.01666666667

#----------------------

area_original = np.trapz(List_ALPHA_Origin, dx=5/99999)
area_a_minus09 = np.trapz(List_a_minus09, dx=5/99999)
area_a_minus11 = np.trapz(List_a_minus11, dx=5/99999)
area_a_minus6 = np.trapz(List_a_minus6, dx=5/99999)
area_a_minus01666666667 = np.trapz(List_a_minus01666666667, dx=5/99999)

#----------------------

difference_between_1 = abs(area_original - area_original)
difference_between_2 = abs(area_a_minus09 - area_original)
difference_between_3 = abs(area_a_minus11 - area_original)
difference_between_4 = abs(area_a_minus6 - area_original)
difference_between_5 = abs(area_minus01666666667 - area_original)

